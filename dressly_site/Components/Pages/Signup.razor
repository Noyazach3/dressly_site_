@page "/signup"
@inject NavigationManager Navigation
@inject IHttpClientFactory ClientFactory
@using ClassLibrary1.Models

<h1 style="text-align:center;">הרשמה</h1>

<div class="container" style="max-width: 400px; margin-top: 20px;">
    <EditForm Model="@user" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="username" style="text-align: right; display: block;">:שם משתמש</label>
            <InputText id="username" class="form-control" @bind-Value="user.Username" required />
        </div>

        <div class="form-group">
            <label for="email" style="text-align: right; display: block;">:אימייל</label>
            <InputText id="email" type="email" class="form-control" @bind-Value="user.Email" required />
        </div>

        <div class="form-group">
            <label for="password" style="text-align: right; display: block;">:סיסמה</label>
            <InputText id="password" type="password" class="form-control" @bind-Value="user.PasswordHash" required />
        </div>

        <div class="form-group" style="margin-top: 20px;">
            <button type="submit" class="btn btn-lg"
                    style="background-color: #ff69b4; border: none; font-size: 1.25em; font-weight: bold; width: 100%;
                           box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2); transform: translateY(0); transition: transform 0.2s ease;">
                הירשם
            </button>
        </div>
    </EditForm>

    <div style="margin-top: 10px; text-align: center;">
        <p>כבר יש לך חשבון? <a href="/login">התחבר כאן</a></p>
    </div>

    @if (!string.IsNullOrEmpty(Message))
    {
        <div class="alert alert-danger mt-3">
            @Message
        </div>
    }
    @if (!string.IsNullOrEmpty(SuccessMessage))
    {
        <div class="alert alert-success mt-3">
            @SuccessMessage
        </div>
    }
</div>

@code {
    private User user = new User();

    private string Message;
    private string SuccessMessage;

    private async Task HandleValidSubmit()
    {
        Message = string.Empty;
        SuccessMessage = string.Empty;

        try
        {
            var client = ClientFactory.CreateClient();
            client.BaseAddress = new Uri("http://localhost:5177/api/"); // ודא שזה ה-URL הנכון של ה-API שלך

            user.Role = "User"; // נדרש לפי מבנה ה-API

            var response = await client.PostAsJsonAsync("Users/Register", user);
            if (response.IsSuccessStatusCode)
            {
                SuccessMessage = "הרישום בוצע בהצלחה!";
                Navigation.NavigateTo("/login");
            }
            else
            {
                var errorContent = await response.Content.ReadAsStringAsync();
                Message = $"אירעה שגיאה בעת ההרשמה: {errorContent}";
            }
        }
        catch (Exception ex)
        {
            Message = $"אירעה שגיאה: {ex.Message}";
        }
    }

   
}
