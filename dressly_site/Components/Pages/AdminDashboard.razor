@page "/admin-dashboard"
@inject NavigationManager NavigationManager
@inject ClassLibrary1.Services.LoginSession LoginSession
@inject HttpClient Http
@using ClassLibrary1.Services

<style>
    body {
        background-color: #FAF3F0; /* רקע שמנתי */
        font-family: 'Arial', sans-serif;
    }

    .admin-header {
        color: #333;
        text-align: center;
        font-weight: bold;
        margin-bottom: 30px;
    }

    .alert-danger {
        background-color: #F8E1E7;
        color: #A94442;
        border: none;
        padding: 15px;
        border-radius: 10px;
        font-weight: bold;
    }

    .card-container {
        display: flex;
        justify-content: center;
        gap: 20px;
        flex-wrap: wrap;
    }

    .card {
        width: 250px;
        background-color: #FFFFFF;
        border-radius: 15px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease-in-out;
        text-align: center;
        padding: 15px;
    }

        .card:hover {
            transform: scale(1.05);
        }

        .card img {
            width: 70px;
            height: 70px;
            margin-bottom: 10px;
        }

    .card-title {
        font-size: 18px;
        font-weight: bold;
        color: #333;
    }

    .card-text {
        font-size: 14px;
        color: #555;
        margin-bottom: 10px;
    }

    .btn-custom {
        background-color: #F28D9E; /* ורוד פסטלי */
        color: white;
        padding: 8px 15px;
        border: none;
        border-radius: 8px;
        font-weight: bold;
        transition: background-color 0.3s;
    }

        .btn-custom:hover {
            background-color: #D46A7E;
        }
</style>

<h3 class="admin-header">🔧 לוח ניהול</h3>

@if (string.IsNullOrEmpty(LoginSession.Role))
{
    <p class="text-center text-muted">🔄 טוען נתוני משתמש...</p>
}
else if (!LoginSession.Role.Equals("Admin"))
{
    <p class="text-center fw-bold">Current Role: @LoginSession.Role</p>

    <div class="alert alert-danger text-center" role="alert">
        ⛔ אינך רשאי לצפות בדף זה. תועבר לדף הבית בעוד @countdown שניות...
    </div>
}
else
{
    <p class="text-center fw-bold">Current Role: @LoginSession.Role</p>

    <div class="card-container">
        <div class="card">
            <h5 class="card-title">ניהול משתמשים</h5>
            <p class="card-text">צפייה ומחיקת משתמשים</p>
            <button class="btn-custom" @onclick="NavigateToEditUsers">ערוך משתמשים</button>
        </div>

        <div class="card">
            <h5 class="card-title">ניהול פרטי לבוש</h5>
            <p class="card-text">צפייה ומחיקת פרטי לבוש</p>
            <button class="btn-custom" @onclick="NavigateToManageClothing">נהל בגדים</button>
        </div>

        <div class="card">
            <h5 class="card-title">סטטיסטיקות</h5>
            <p class="card-text">צפייה בסטטיסטיקות האתר</p>
            <button class="btn-custom" @onclick="NavigateToClothingStats">צפה בסטטיסטיקות</button>
        </div>
    </div>
}

@code {
    private int countdown = 5; // ספירה לאחור מ-5 שניות

    protected override async Task OnInitializedAsync()
    {
        // הדפסת התפקיד ל-Debug Console
        Console.WriteLine($"🔹 LoginSession.Role בתחילת OnInitializedAsync(): {LoginSession.Role}");

        // המתנה לטעינת נתוני המשתמש אם הם עדיין לא נטענו
        int retries = 5;
        while (string.IsNullOrEmpty(LoginSession.Role) && retries > 0)
        {
            Console.WriteLine("🔄 מחכה לטעינת נתוני המשתמש...");
            await Task.Delay(1000);
            retries--;
        }

        Console.WriteLine($"✅ נתוני המשתמש נטענו, Role = {LoginSession.Role}");
        StateHasChanged();

        // אם עדיין אין תפקיד לאחר ההמתנה, המשתמש נחשב כלא מורשה
        if (string.IsNullOrEmpty(LoginSession.Role) || !LoginSession.Role.Equals("Admin"))
        {
            Console.WriteLine("⛔️ המשתמש אינו מורשה, מעביר לדף הבית...");
            NavigationManager.NavigateTo("/access-denied");
        }
    }

    private void NavigateToEditUsers()
    {
        NavigationManager.NavigateTo("/edit-users");
    }

    private void NavigateToManageClothing()
    {
        NavigationManager.NavigateTo("/manage-clothing");
    }

    private void NavigateToClothingStats()
    {
        NavigationManager.NavigateTo("/clothing-stats");
    }
}
