@page "/home"
@inject NavigationManager Navigation
@inject HttpClient Http
@inject ClassLibrary1.Services.LoginSession LoginSession
@using ClassLibrary1.Models

<div class="dashboard-container">
    <h1 class="welcome-title">!ברוכה הבאה, @LoginSession.Username</h1>

    @if (welcomeMessageVisible)
    {
        <div class="welcome-popup shadow">
            <h5> !DRESSLY - ברוכים הבאים ל</h5>
            <p>
                ?נמאס לך לעמוד מול הארון ולחשוב מה ללבוש
                <br />
                כאן תוכלו לשמור את הבגדים שלך, לתכנן אאוטפיטים לפי סגנון ועונה, וליהנות מסטייל יומי מותאם אישית 💖
            </p>
            <button class="btn btn-sm btn-outline-dark mt-2" @onclick="() => welcomeMessageVisible = false">הבנתי</button>
        </div>
    }

    <div class="cards-grid">
        <div class="dashboard-card">
            <h4> סה״כ פריטים בארון</h4>
            <p class="value">@clothingCount</p>
        </div>
        <div class="dashboard-card">
            <h4> אאוטפיטים מתוכננים</h4>
            <p class="value">@outfitCount</p>
        </div>
        <div class="dashboard-card">
            <h4> טיפ יומי לסטייל</h4>
            <p class="tip">@styleTip</p>
        </div>
    </div>

    <div class="actions-row">
        <button class="action-btn" @onclick='() => Navigation.NavigateTo("/add-item")'>➕ הוסף פריט חדש</button>
        <button class="action-btn" @onclick='() => Navigation.NavigateTo("/plan-outfits-general")'>🎨 צור אאוטפיט</button>
        <button class="action-btn" @onclick='() => Navigation.NavigateTo("/outfit-list")'>👀 צפייה באאוטפיטים</button>
    </div>
</div>

<style>
    .dashboard-container {
        max-width: 1000px;
        margin: auto;
        padding: 40px 20px;
        font-family: 'Segoe UI', sans-serif;
        text-align: center;
    }

    .welcome-title {
        font-size: 2.5rem;
        margin-bottom: 30px;
        font-weight: 600;
        color: #2c2c2c;
    }

    .welcome-popup {
        background-color: #fff4fa;
        border: 2px solid #ec87b8;
        padding: 30px 40px;
        border-radius: 16px;
        margin-bottom: 30px;
        color: #444;
        max-width: 800px;
        margin-left: auto;
        margin-right: auto;
        font-size: 1.1rem;
        line-height: 1.6;
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
        animation: fadeIn 0.5s ease-out;
    }


    .cards-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 25px;
        margin-bottom: 40px;
    }

    .dashboard-card {
        background: linear-gradient(145deg, #ffffff, #f3f3f3);
        border-radius: 15px;
        padding: 30px 20px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.08);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .dashboard-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 6px 16px rgba(0,0,0,0.12);
        }

        .dashboard-card h4 {
            font-size: 1.1rem;
            color: #666;
            margin-bottom: 15px;
        }

    .value {
        font-size: 2.8rem;
        font-weight: 700;
        color: rosybrown;
    }

    .tip {
        font-size: 1rem;
        color: #444;
    }

    .actions-row {
        display: flex;
        justify-content: center;
        gap: 15px;
        flex-wrap: wrap;
    }

    .action-btn {
        background-color: rosybrown;
        color: white;
        border: none;
        border-radius: 30px;
        padding: 12px 28px;
        font-size: 1rem;
        font-weight: 500;
        transition: background-color 0.3s ease, transform 0.2s ease;
        cursor: pointer;
    }

        .action-btn:hover {
            background-color: pink;
            transform: scale(1.04);
        }
</style>

@code {
    private int clothingCount = 0;
    private int outfitCount = 0;
    private string styleTip = string.Empty;
    private bool welcomeMessageVisible = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var clothingItems = await Http.GetFromJsonAsync<List<ClothingItem>>(
                $"api/clothingitems/user/{LoginSession.UserID}");
            clothingCount = clothingItems?.Count ?? 0;

            var outfits = await Http.GetFromJsonAsync<List<Outfit>>(
                $"api/outfits/get-user-outfits?userId={LoginSession.UserID}");
            outfitCount = outfits?.Count ?? 0;

            styleTip = GetDailyTip();
        }
        catch (Exception ex)
        {
            Console.WriteLine("❌ שגיאה בטעינת הדף: " + ex.Message);
        }
    }

    private string GetDailyTip()
    {
        var tips = new[]
        {
            "שלבו צבע נועז אחד עם פריטים נייטרליים.",
            "נעליים טובות מרימות לוק פשוט.",
            "אל תפחדו מאקססוריז – זה מה שעושה את ההבדל!",
            "לבן ושחור תמיד קלאסי, אבל נגיעה של צבע מוסיפה אופי.",
            "התאימו בגד לפי מצב הרוח – לא רק לפי העונה."
        };

        return tips[DateTime.Today.Day % tips.Length];
    }

    public class Outfit
    {
        public int OutfitID { get; set; }
    }

    public class ClothingItem
    {
        public int ItemID { get; set; }
    }
}
