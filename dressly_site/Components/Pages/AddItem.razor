@page "/add-item"
@inject HttpClient Http
@inject NavigationManager Navigation
@using ClassLibrary1.Models


<div class="container mt-5">
    <div class="card shadow-sm border-0">
        <div class="card-body text-end">

            <h2 class="card-title text-center mb-4">הוספת פריט לבוש</h2>

            @if (!isStep1Completed)
            {
                <h5 class="text-muted mb-4 text-center">שלב 1 מתוך 2: הזנת פרטי הפריט</h5>
                <EditForm Model="@clothingItem" OnValidSubmit="HandleStep1Submit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="mb-3">
                        <label for="category" class="form-label">:בחר סוג פריט</label>
                        <InputSelect id="category" class="form-select" @bind-Value="clothingItem.Category">
                            <option value="">בחר...</option>
                            <option value="Shirt">חולצה</option>
                            <option value="Pants">מכנסיים</option>
                            <option value="Skirt">חצאית</option>
                            <option value="Dress">שמלה</option>
                            <option value="TankTop">גופייה</option>
                            <option value="Cardigan">עליונית</option>
                            <option value="Jacket">גקט</option>
                            <option value="Bag">תיק</option>
                            <option value="Shoes">נעליים</option>
                            <option value="Accessories">אקססוריז</option>
                        </InputSelect>
                    </div>

                    <div class="mb-3">
                        <label for="season" class="form-label">:בחר עונה</label>
                        <InputSelect id="season" class="form-select" @bind-Value="clothingItem.Season">
                            <option value="">בחר...</option>
                            <option value="Summer">קיץ</option>
                            <option value="Winter">חורף</option>
                        </InputSelect>
                    </div>

                    <div class="mb-3">
                        <label for="usageType" class="form-label">:בחר סוג שימוש</label>
                        <InputSelect id="usageType" class="form-select" @bind-Value="clothingItem.UsageType">
                            <option value="">בחר...</option>
                            <option value="Casual">יום-יומי</option>
                            <option value="Festive">חגיגי</option>
                        </InputSelect>
                    </div>

                    <div class="mb-3">
                        <label for="color" class="form-label">:בחר צבע</label>
                        <InputSelect id="color" class="form-select" @bind-Value="clothingItem.ColorName">
                            <option value="">בחר...</option>
                            <option value="Red">אדום</option>
                            <option value="Blue">כחול</option>
                            <option value="Green">ירוק</option>
                            <option value="Yellow">צהוב</option>
                            <option value="Black">שחור</option>
                            <option value="White">לבן</option>
                        </InputSelect>
                    </div>

                    <div class="mb-4">
                        <label for="washAfterUses" class="form-label">?כל כמה שימושים לכבס את הפריט</label>
                        <InputSelect id="washAfterUses" class="form-select" @bind-Value="clothingItem.WashAfterUses">
                            <option value="">בחר...</option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                        </InputSelect>
                    </div>

                    <div class="d-grid">
                        <button type="submit" class="btn btn-pink btn-lg">המשך לשלב הבא</button>
                    </div>
                </EditForm>
            }
            else if (!isComplete)
            {
                <h5 class="text-muted mb-4 text-center">מעולה! עכשיו רק נותר להעלות תמונה של הפריט</h5>
                <div class="text-center">
                    <InputFile OnChange="HandleFileSelected" class="form-control mb-3" />
                    <button class="btn btn-pink" @onclick="HandleUploadImage">העלה תמונה</button>
                </div>
            }
            else
            {
                <div class="alert alert-success text-center mt-3">
                    <h5>✨ הפריט הוסף לארון בהצלחה!</h5>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .btn-pink {
        background-color: #ec87b8;
        border: none;
        color: white;
        font-weight: 600;
        padding: 0.75rem 1.5rem;
        border-radius: 0.5rem;
        transition: all 0.3s ease-in-out;
    }

        .btn-pink:hover {
            background-color: #f69dc6;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(236, 135, 184, 0.3);
        }
</style>
@code {
    private ClothingItem clothingItem = new ClothingItem();
    private IBrowserFile selectedFile;
    // משתנה לקבלת מזהה המשתמש המחובר – יש לממש בהתאם למערכת האימות שלך
    private int currentUserId = 1; // לדוגמה, להחליף בערך אמיתי
    private bool isStep1Completed = false;
    private bool isComplete = false;

    // שלב 1: טיפול בהגשת הטופס עם המאפיינים (ללא תמונה)
    private async Task HandleStep1Submit()
    {
        // עדכון UserID מהמשתמש המחובר
        clothingItem.UserID = currentUserId;
        // DateAdded יתמלא אוטומטית, אפשר גם לקבוע כאן:
        clothingItem.DateAdded = DateTime.Now;
        // IsWashed כברירת מחדל false
        clothingItem.IsWashed = false;

        // אם יש lookup לטבלת Colors – כאן ניתן לבצע חיפוש לקבלת ColorID לפי ColorName
        // לדוגמה: clothingItem.ColorID = await GetColorIdFromColorName(clothingItem.ColorName);

        // הוספת הפריט ללא תמונה, וכך יווצר ItemID
        var response = await Http.PostAsJsonAsync("https://localhost:5177/api/clothingitems/addClothingItemAttributes", clothingItem);
        if (response.IsSuccessStatusCode)
        {
            // נניח שה-API מחזיר את ה-ItemID החדש
            clothingItem.ItemID = await response.Content.ReadFromJsonAsync<int>();
            isStep1Completed = true;
        }
        else
        {
            Console.WriteLine("Error adding clothing item attributes");
        }
    }

    // שלב 2: טיפול בבחירת התמונה והעלאתה
    private async Task HandleUploadImage()
    {
        if (selectedFile != null)
        {
            var content = new MultipartFormDataContent();
            // שליחת UserID, ItemID ועוד אם נדרש – כאן חשוב לשלוח את ItemID שקיבלנו
            content.Add(new StringContent(clothingItem.ItemID.ToString()), "ItemID");

            var fileContent = new StreamContent(selectedFile.OpenReadStream());
            fileContent.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue(selectedFile.ContentType);
            // השדה שנשלח צריך להתאים לשם המצופה ב-API (לדוגמה, "imageFile")
            content.Add(fileContent, "imageFile", selectedFile.Name);

            var response = await Http.PostAsync("https://localhost:5177/api/clothingitems/uploadImageForItem", content);
            if (response.IsSuccessStatusCode)
            {
                isComplete = true;
            }
            else
            {
                Console.WriteLine("Error uploading image");
            }
        }
    }

    private void HandleFileSelected(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;
    }
}
