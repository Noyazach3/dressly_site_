@page "/outfit-list"
@inject IConfiguration Configuration
@inject NavigationManager Navigation
@inject HttpClient Http
@using ClassLibrary1.Models
@using MySql.Data.MySqlClient
@using System.Linq

<div class="center-page">
    <h1>הצג את האאוטפיטים שלי</h1>

    <div class="filter-container-left">
        <label for="outfit-filter">בחר:</label>
        <InputSelect id="outfit-filter" @bind-Value="outfitFilter" class="filter-select">
            <option value="All">הראה את כל האאוטפיטים</option>
            <option value="Favorites">הראה רק מועדפים</option>
        </InputSelect>
    </div>

    <div class="form-container">
        @foreach (var outfit in FilterOutfits(outfits, outfitFilter))
        {
            <div class="form-group">
                <div class="item-card" @onmouseover="() => ShowFavoriteButton(outfit)" @onmouseleave="() => HideFavoriteButton(outfit)">
                    @if (outfit.ClothingItemIDs != null && outfit.ClothingItemIDs.Count > 0)
                    {
                        @foreach (var itemId in outfit.ClothingItemIDs)
                        {
                            <img src="@GetImageUrl(itemId)" alt="Clothing Item" class="item-image" />
                        }
                    }
                    else
                    {
                        <p>אין תמונה זמינה</p>
                    }
                    <div class="item-details">
                        <p>@outfit.Name</p>
                        <p>@outfit.Description</p>

                        @if (outfitFilter == "All")
                        {
                            <button class="btn pink-btn favorite-btn" @onclick="() => AddToFavorites(outfit)" style="display:@(outfit.IsHovered ? "block" : "none")">הוסף למועדפים</button>
                        }
                    </div>
                </div>
            </div>
        }

        @if (outfitFilter == "All")
        {
            <button type="submit" class="btn pink-btn">עדכן מועדפים</button>
        }
    </div>
</div>

@if (outfitSelection.IsUpdated)
{
    <h4>העדכון בוצע בהצלחה!</h4>
}

@code {
    private OutfitSelection outfitSelection = new OutfitSelection();
    private List<Outfit> outfits = new List<Outfit>();
    private string outfitFilter = "All";

    private async Task LoadOutfits()
    {
        try
        {
            outfits = await Http.GetFromJsonAsync<List<Outfit>>("api/outfits/get-user-outfits?userId=1");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    private void AddToFavorites(Outfit outfit)
    {
        outfit.IsFavorite = true;
    }

    private void ShowFavoriteButton(Outfit outfit)
    {
        outfit.IsHovered = true;
    }

    private void HideFavoriteButton(Outfit outfit)
    {
        outfit.IsHovered = false;
    }

    private IEnumerable<Outfit> FilterOutfits(List<Outfit> outfits, string filter)
    {
        if (filter == "Favorites")
        {
            return outfits.Where(outfit => outfit.IsFavorite);
        }
        return outfits;
    }

    private string GetImageUrl(int itemId)
    {
        return $"https://your-api-url/api/clothingitems/get-image/{itemId}";
    }

    public class OutfitSelection
    {
        public bool IsUpdated { get; set; } = false;
    }

    public class Outfit
    {
        public int OutfitID { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public List<int> ClothingItemIDs { get; set; } = new List<int>();
        public bool IsFavorite { get; set; }
        public bool IsHovered { get; set; }
    }
}
