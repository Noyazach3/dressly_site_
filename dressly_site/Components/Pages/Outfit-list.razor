@page "/outfit-list"
@inject IConfiguration Configuration
@inject NavigationManager Navigation
@inject HttpClient Http
@using ClassLibrary1.Models
@using MySql.Data.MySqlClient
@using System.Linq



<div class="container py-5 text-center">
    <h2 class="fw-bold text-pink mb-4">✨ האאוטפיטים שלי</h2>

    <div class="d-flex justify-content-center mb-4">
        <div class="text-end" dir="rtl" style="max-width: 300px; width: 100%;">
            <label for="outfit-filter" class="form-label fw-semibold">בחר תצוגה:</label>
            <InputSelect id="outfit-filter" @bind-Value="outfitFilter" class="form-select">
                <option value="All">הראה את כל האאוטפיטים</option>
                <option value="Favorites">הראה רק מועדפים</option>
            </InputSelect>
        </div>
    </div>

    <div class="row row-cols-1 row-cols-md-2 g-4 justify-content-center">
        @foreach (var outfit in FilterOutfits(outfits, outfitFilter))
        {
            <div class="col">
                <div class="card border-0 shadow-sm p-3 text-center h-100"
                     @onmouseover="() => ShowFavoriteButton(outfit)"
                     @onmouseleave="() => HideFavoriteButton(outfit)">
                    <div class="d-flex justify-content-center flex-wrap mb-3">
                        @if (outfit.ClothingItemIDs != null && outfit.ClothingItemIDs.Count > 0)
                        {
                            @foreach (var itemId in outfit.ClothingItemIDs)
                            {
                                <img src="@GetImageUrl(itemId)" alt="Clothing Item"
                                     class="rounded me-1 mb-2" style="width: 80px; height: 80px; object-fit: cover;" />
                            }
                        }
                        else
                        {
                            <p class="text-muted">אין תמונה זמינה</p>
                        }
                    </div>

                    <div>
                        <h5 class="mb-1">@outfit.Name</h5>
                        <p class="text-muted small">@outfit.Description</p>

                        @if (outfitFilter == "All")
                        {
                            <button class="btn btn-sm rounded-pill mt-2"
                                    style="background-color: #f4b6c2; color: white; font-weight: 500; display:@(outfit.IsHovered ? "inline-block" : "none")"
                                    @onclick="() => AddToFavorites(outfit)">
                                הוסף למועדפים 💖
                            </button>
                        }
                    </div>
                </div>
            </div>
        }
    </div>

    @if (outfitFilter == "All")
    {
        <div class="text-center mt-4">
            <button type="submit" class="btn btn-sm px-4 py-2 rounded-pill"
                    style="background-color: #f4b6c2; color: white; font-weight: 600;">
                עדכן מועדפים
            </button>
        </div>
    }

    @if (outfitSelection.IsUpdated)
    {
        <div class="mt-4 alert alert-success">
            <h6 class="mb-0">✨ העדכון בוצע בהצלחה!</h6>
        </div>
    }
</div>

@code {
    private OutfitSelection outfitSelection = new OutfitSelection();
    private List<Outfit> outfits = new List<Outfit>();
    private string outfitFilter = "All";

    private async Task LoadOutfits()
    {
        try
        {
            outfits = await Http.GetFromJsonAsync<List<Outfit>>("api/outfits/get-user-outfits?userId=1");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    private void AddToFavorites(Outfit outfit)
    {
        outfit.IsFavorite = true;
    }

    private void ShowFavoriteButton(Outfit outfit)
    {
        outfit.IsHovered = true;
    }

    private void HideFavoriteButton(Outfit outfit)
    {
        outfit.IsHovered = false;
    }

    private IEnumerable<Outfit> FilterOutfits(List<Outfit> outfits, string filter)
    {
        if (filter == "Favorites")
        {
            return outfits.Where(outfit => outfit.IsFavorite);
        }
        return outfits;
    }

    private string GetImageUrl(int itemId)
    {
        return $"https://your-api-url/api/clothingitems/get-image/{itemId}";
    }

    public class OutfitSelection
    {
        public bool IsUpdated { get; set; } = false;
    }

    public class Outfit
    {
        public int OutfitID { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public List<int> ClothingItemIDs { get; set; } = new List<int>();
        public bool IsFavorite { get; set; }
        public bool IsHovered { get; set; }
    }
}
